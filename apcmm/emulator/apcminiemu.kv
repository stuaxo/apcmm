#:import mido mido

#:import actions apcmm.api.actions

#:import ListItemButton kivy.uix.listview.ListItemButton
#:import TabbedPanelItem kivy.uix.tabbedpanel.TabbedPanelItem
#:import TabbedPanel kivy.uix.tabbedpanel.TabbedPanel
#:import TextInput kivy.uix.textinput.TextInput
#:import la kivy.adapters.listadapter

#:import da kivy.adapters.dictadapter

#:import APCMiniModel apcmm.api.model.APCMiniModel
#:import APCMiniWidget apcmm.emulator.widgets.APCMiniWidget
#:import mk_dictadapter apcmm.emulator.widgets.mk_dictadapter

<ClipButton>:
    Image:
        source: 'images/clip-button-grey.png'

<SceneButton>:
    Image:
        source: 'images/round-button-grey.png'
        size_hint: 1, 1

<ControlButton>:
    Image:
        source: 'images/round-button-grey.png'
        size_hint: 1, 1


<MidiChooserPopup>:
    id: midi_popup
    size_hint: .5, .5
    auto_dismiss: True
    title: 'Connect To Midi'
    BoxLayout:
        id: content
        orientation: "vertical"

        ListView:
            id: items
            #size_hint: 1,.8
            adapter:
                mk_dictadapter(
                data=app.midi_devices,
                cls=ListItemButton,
                allow_empty_selection=True,
                selection_mode='single',
                )
        Button:
            text: 'Cancel'
            on_press: root.dismiss()
            size_hint_y: 0.2


<ActionPopup>:
    id: action_popup
    size_hint: .5, .5
    auto_dismiss: True
    title: 'Actions'
    BoxLayout:
        id: content
        orientation: "vertical"

        ListView:
            id: items
            size_hint: 1,.8

            adapter:
                la.ListAdapter(
                #data=[action.get_name() for action in actions.ACTIONS],
                data = actions.ACTIONS.keys(),
                cls=ListItemButton,
                allow_empty_selection=True,
                selection_mode='single',
                )
        BoxLayout:
            Button:
                text: 'Cancel'
                on_press: root.dismiss()
                size_hint_y: 0.3
            Button:
                text: 'Add'
                size_hint_y: 0.3


<PerformanceScreen>:
    id: perform
    FloatLayout:
        ActionBar:
            size_hint: 1,0.1
            pos_hint: {'top':1}
            ActionView:
                use_separator: True
                ActionPrevious:
                    title: 'Perform'
                ActionOverflow:
                ActionButton:
                    text: '> %s' % app.midi_port # TODO - load this from config
                    size_hint: 1, 1
                    on_release: root.toggle_midi_dropdown(self)
                    id: toggle_midi_popup
                ActionButton:
                    text: '[ %s ]' % app.profile_name # TODO - load this from config
                    size_hint: 1, 1
                    #on_release: root.toggle_midi_dropdown(self)
                    id: profile_list
                ActionButton:
                    text: 'Edit'
                    on_press:
                        root.manager.transition.direction = 'down'
                        root.manager.current = 'edit'
        APCMiniWidget:
            ## model: root.model
            id: apc_widget
            size_hint: 1, 0.9


<MappingTitleBar>:
    id: title
    size_hint: 1, 0.9
    Label:
        text: "Edit Mapping"
        size_hint: 0.3, 1
    TextInput:
        id: mapping_name
        text: root.parent.parent.mapping_name
        on_text: root.parent.parent.set_mapping_name(self.text)
        size_hint: 0.2, 1
        multiline: False
        background_color: 1, 1, 1, 0.025
        foreground_color: 1, 1, 1, 1
    ActionToggleButton:
        text: 'toggle'
        group: 'toggle_type'
    ActionToggleButton:
        text: 'gate'
        group: 'toggle_type'
    ActionToggleButton:
        text: 'one shot'
        group: 'toggle_type'


<ActionEventWidget>:
    Label:
        id: action
        text: ""
        width: 0.4
    Button:
        id: event
        text: ""
        width: 0.4

<MappingEditor>:
    id: edit_mapping
    size_hint_y: 0.3
    canvas.before:
        Color:
            rgba: 0.15, 0.15, 0.15, 1
        Rectangle:
            # self here refers to the widget i.e BoxLayout
            pos: self.pos
            size: self.size
    BoxLayout:
        id: bottom_bar
        orientation: "vertical"
        MappingTitleBar:

<ActionList>:
    # list of actions
    id: action_stack
    size_hint: 1,.8
    pos_hint: {'x': 0, 'top': 1}
    adapter:
        la.ListAdapter(
        data=["Smiley Control",],
        cls=ListItemButton,
        allow_empty_selection=True,
        selection_mode='single',
        )

<EditScreen>:
    id: edit
    model: app.virtual_apc

    FloatLayout:
        ActionBar:
            size_hint: 1,0.1
            pos_hint: {'top':1}
            ActionView:
                use_separator: True
                ActionPrevious:
                    title: 'Edit Profile %s' % app.profile_name
                    on_press:
                        root.manager.transition.direction = 'up'
                        root.manager.current = 'perform'
                ActionOverflow:
                ActionButton:
                    text: '[ %s ]' % app.profile_name # TODO - load this from config
                    size_hint: 1, 1
                    #on_release: root.toggle_midi_dropdown(self)
                    id: profile_list
                ActionButton:
                    text: 'Save'
                    on_press:
                        root.manager.transition.direction = 'up'
                        root.manager.current = 'perform'
        TabbedPanel:
            do_default_tab: False
            tab_width: self.parent.width / (len(self.tab_list) + 1)
            size_hint_y: 0.9
            tab_pos: "left_bottom"
            TabbedPanelItem:
                text: "Mapping"
                BoxLayout:
                    orientation: "vertical"
                    BoxLayout:
                        APCMiniWidget:
                            id: mapping
                            model: root.model
                            ## thing: root.blah ## TODO
                        BoxLayout:
                            id: side_bar
                            size_hint_x: 0.4
                            orientation: "vertical"
                            canvas.before:
                                Color:
                                    rgba: 0.1, 0.1, 0.1, 1
                                Rectangle:
                                    # self here refers to the widget i.e BoxLayout
                                    pos: self.pos
                                    size: self.size
                            BoxLayout:
                                size_hint_y: 0.1
                                Button:
                                    id: add_action
                                    text: "+ Group"
                                    #size_hint: 0.5, 0.1
                                    #pos_hint: {"top": 0, "left": 0}
                                    on_release: root.toggle_add_action_dropdown(self)
                                Button:
                                    id: add_action
                                    text: "+ Action"
                                    #size_hint: 0.5, 0.1
                                    #pos_hint: {"top": 1, "left": 0}
                                    on_release: root.toggle_add_action_dropdown(self)
                            FloatLayout:
                                id: actions
                                orientation: "vertical"
                                #pos_hint: {"top": 0.8}
                                #size_hint_y: 0.8
                                Label:
                                    text: "actions"
                                    pos_hint: {'x': 0, 'y': 0}
                                    color: 0.7, 0.7, 0.7, 1
                                    font_size: 20
                                    id: side_bar_text
                                ActionSideBar:
                                    id: action_sidebar
                                    model: root.model
                                    orientation: "vertical"
                                    pos_hint: {'x': 0, 'top': 1}
                                    action_editor: bottom_bar

                    MappingEditor:
                        id: bottom_bar
                        action_sidebar: action_sidebar
