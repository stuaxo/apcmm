#:import mido mido

#:import ListItemButton kivy.uix.listview.ListItemButton
#:import TabbedPanelItem kivy.uix.tabbedpanel.TabbedPanelItem
#:import TabbedPanel kivy.uix.tabbedpanel.TabbedPanel

#:import la kivy.adapters.listadapter
#:import APCMiniModel apcmm.api.model.APCMiniModel
#:import APCMiniWidget apcmm.emulator.widgets.APCMiniWidget

<ClipButton>:
    Image:
        source: 'images/clip-button-grey.png'

<SceneButton>:
    Image:
        source: 'images/round-button-grey.png'
        size_hint: 1, 1

<ControlButton>:
    Image:
        source: 'images/round-button-grey.png'
        size_hint: 1, 1


<MidiChooserPopup>:
    id: midipopup
    size_hint: .5, .5
    auto_dismiss: True
    title: 'Connect To Midi'
    BoxLayout:
        id: content
        orientation: "vertical"

        ListView:
            id: midi_devices
            size_hint: 1,.8

            adapter:
                la.ListAdapter(
                data=["Disconnected"] + mido.get_ioport_names(),
                cls=ListItemButton,
                allow_empty_selection=True,
                selection_mode='single',
                )

        Button:
            text: 'Cancel'
            on_press: root.dismiss()
            size_hint_y: 0.2

<PerformanceScreen>:
    id: perform
    FloatLayout:
        ActionBar:
            size_hint: 1,0.1
            pos_hint: {'top':1}
            ActionView:
                use_separator: True
                ActionPrevious:
                    title: 'Perform'
                ActionOverflow:
                ActionButton:
                    text: '> %s' % app.midi_port # TODO - load this from config
                    size_hint: 1, 1
                    on_release: root.toggle_midi_dropdown(self)
                    id: toggle_midi_popup
                ActionButton:
                    text: '[ %s ]' % app.profile_name # TODO - load this from config
                    size_hint: 1, 1
                    #on_release: root.toggle_midi_dropdown(self)
                    id: profile_list
                ActionButton:
                    text: 'Edit'
                    on_press:
                        root.manager.transition.direction = 'down'
                        root.manager.current = 'edit'
        APCMiniWidget:
            ## model: root.model
            id: apc_widget
            size_hint: 1, 0.9


<EditScreen>:
    id: edit
    FloatLayout:
        ActionBar:
            size_hint: 1,0.1
            pos_hint: {'top':1}
            ActionView:
                use_separator: True
                ActionPrevious:
                    title: 'Edit Profile %s' % app.profile_name
                    on_press:
                        root.manager.transition.direction = 'up'
                        root.manager.current = 'perform'
                ActionOverflow:
                ActionButton:
                    text: '[ %s ]' % app.profile_name # TODO - load this from config
                    size_hint: 1, 1
                    #on_release: root.toggle_midi_dropdown(self)
                    id: profile_list
                ActionToggleButton:
                    text: 'press'
                    group: 'map_to'
                ActionToggleButton:
                    text: 'hold'
                    group: 'map_to'
                ActionToggleButton:
                    text: 'release'
                    group: 'map_to'
                ActionButton:
                    text: 'Save'
        TabbedPanel:
            do_default_tab: False
            tab_width: self.parent.width / (len(self.tab_list) + 1)
            size_hint_y: 0.9
            TabbedPanelItem:
                text: "Mapping"
                BoxLayout:
                    orientation: "vertical"
                    BoxLayout:
                        APCMiniWidget:
                            id: mapping
                            ## thing: root.blah ## TODO
                        BoxLayout:
                            id: "sidebar"
                            size_hint_x: 0.3
                            orientation: "vertical"
                            canvas.before:
                                Color:
                                    rgba: 0.1, 0.1, 0.1, 1
                                Rectangle:
                                    # self here refers to the widget i.e BoxLayout
                                    pos: self.pos
                                    size: self.size
                            Button:
                                text: "> Add"
                                size_hint: 0.3, 0.1
                                pos_hint: {"top": 1, "left": 0}
                            FloatLayout:
                                id: "actions"
                                orientation: "vertical"
                                pos_hint: {"top": 1}
                                size_hint_y: 0.9
                                BoxLayout:
                                    id: "action_stack"
                                Label:
                                    text: "actions"
                                    pos_hint: {'x': 0, 'y': 0}
                    BoxLayout:
                        id: "edit_action"
                        size_hint_y: 0.3
                        canvas.before:
                            Color:
                                rgba: 0.15, 0.15, 0.15, 1
                            Rectangle:
                                # self here refers to the widget i.e BoxLayout
                                pos: self.pos
                                size: self.size
                        Label:
                            text: "Edit Action"
